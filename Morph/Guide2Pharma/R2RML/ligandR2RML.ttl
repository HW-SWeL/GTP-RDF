#########################
#Liam Bruce - 24/04/2017#
#Alasdair Gray          #
#########################
@base <http://rdf.guidetopharmacology.org/GRAC/> .
@prefix gtpo: <http://rdf.guidetopharmacology.org/ns/gtpo#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rr: <http://www.w3.org/ns/r2rml#> .

########################################################
# Generate key ligand Data: name, type approval status #
########################################################

<TriplesMap1>
    a rr:TriplesMap;

    rr:logicalTable [ rr:sqlQuery """
		SELECT
		L.ligand_id AS id,
		name AS name,
		type,
		approved,
		CASE
      WHEN type = 'Antibody' THEN 'AntibodyLigand'
      WHEN type = 'Inorganic' THEN 'InorganicLigand'
      WHEN type = 'Natural product' THEN 'NaturalProductLigand'
			WHEN type = 'Metabolite' THEN 'MetaboliteLigand'
      WHEN type = 'Peptide' THEN 'PeptideLigand'
      WHEN type = 'Synthetic organic' THEN 'SyntheticOrganicLigand'
		END AS chemicalclass,
		CASE
			WHEN approved = 't' THEN 't'
			WHEN approved = 'f' THEN 'f'
			ELSE approved = 'f'
		END AS approval
		FROM ligand L;
		""";] ;

    rr:subjectMap [ rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}" ];

	rr:predicateObjectMap
    [
      rr:predicate	rdf:type;
      rr:objectMap	[ rr:template "http://rdf.guidetopharmacology.org/ns/gtpo#{chemicalclass}" ];
    ];
	rr:predicateObjectMap
    [
      rr:predicate	rdfs:label;
      rr:objectMap	[ rr:column "name" ]
    ];
    rr:predicateObjectMap
    [
      rr:predicate	gtpo:ligandName;
      rr:objectMap	[ rr:column "name" ];
    ];
	 rr:predicateObjectMap [
        rr:predicate gtpo:approved;
        rr:objectMap [ rr:column "approval" ];
	]
	.

############################
# Generate ligand comments #
############################

	<TriplesMap2>
	a rr:TriplesMap;
	rr:logicalTable[rr:sqlQuery"""
	SELECT
	ligand_id AS id,
	comments AS comment
	FROM ligand
	WHERE comments <> '';
	""";];

	rr:subjectMap [rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}"];

	rr:predicateObjectMap
	[
	rr:predicate gtpo:comment;
	rr:objectMap [rr:column "comment"];
	]
	.

##############################
# Generate ligand iupac name #
##############################

	<TriplesMap3>
	a rr:TriplesMap;
	rr:logicalTable[rr:sqlQuery"""
	SELECT
	ligand_id AS id,
	iupac_name AS iupac
	FROM ligand
	WHERE iupac_name <> '';
	""";];

	rr:subjectMap [rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}"];

	rr:predicateObjectMap
	[
	rr:predicate gtpo:iupacName;
	rr:objectMap [rr:column "iupac"];
	]
	.

############################
# Generate ligand synonyms #
############################

	<TriplesMap4>
	a rr:TriplesMap;
	rr:logicalTable[rr:sqlQuery"""
	SELECT
	L.ligand_id AS id,
	synonym AS synonym
	FROM ligand L, ligand2synonym L2S
	WHERE L.ligand_id = L2S.ligand_id
	AND  synonym <> '';
	""";];

	rr:subjectMap [rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}"];

	rr:predicateObjectMap
	[
	rr:predicate gtpo:synonym;
	rr:objectMap [rr:column "synonym"];
	]
	.

#######################################################################
# Generate ligand database references, except UniProt which is placed #
# in a blank node pair with taxonomy by the next two Triples Maps     #
#######################################################################

	<TriplesMap5>
    a rr:TriplesMap;

    rr:logicalTable [ rr:sqlQuery """
		SELECT L.ligand_id AS id,
		database_id,
		placeholder AS external_id,
		CASE
		WHEN database_id = 33 THEN 'http://identifiers.org/chembl.compound/'
		END AS  namespace
		FROM ligand L, ligand_database_link LDL
		WHERE database_id = 33
		AND LDL.ligand_id = L.ligand_id;
		""";] ;

    rr:subjectMap [ rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}" ];

	 rr:predicateObjectMap [
        rr:predicate gtpo:xref;
        rr:objectMap [ rr:template "{namespace}{external_id}" ];
	]
	.


####################################
# Generate ligand structure data - #
# InChI identifiers & SMILES       #
####################################

	<TriplesMap6>
    a rr:TriplesMap;

    rr:logicalTable [ rr:sqlQuery """
		SELECT
		ligand_id AS id,
		isomeric_standard_inchi AS inchi,
		isomeric_standard_inchi_key AS key,
		isomeric_smiles AS iso,
		nonisomeric_smiles AS smiles
		FROM ligand_structure;
		""";] ;

    rr:subjectMap [ rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}" ];
	rr:predicateObjectMap
	[
      rr:predicate	gtpo:inChI ;
      rr:objectMap	[ rr:column "inchi" ];
    ];
	 rr:predicateObjectMap [
        rr:predicate gtpo:inChIKey;
        rr:objectMap [ rr:column "key" ];
	];
	 rr:predicateObjectMap [
        rr:predicate gtpo:isomericSMILES;
        rr:objectMap [ rr:column "iso" ];
	];
	rr:predicateObjectMap
	[
		rr:predicate gtpo:canonicalSMILES;
		rr:objectMap [rr:column "smiles"];
	]
	.

#####################################################################
# Generates blank node for the cross reference data and taxonomy id #
# where they exist                                                  #
#####################################################################

	<TriplesMap8>
	a rr:TriplesMap;
	rr:logicalTable [ rr:sqlQuery """
		SELECT L.ligand_id AS id,
		database_id as DB,
		placeholder AS external_id,
		S.species_id AS species,
		ncbi_taxonomy_id AS ncbi
		FROM ligand L, ligand_database_link LDL, species S
		WHERE L.ligand_id = LDL.ligand_id
		AND S.species_id = LDL.species_id
		AND database_id = 5;
		""";];
	rr:subjectMap [rr:template "http://rdf.guidetopharmacology.org/GRAC/ligand{id}";];
	rr:predicateObjectMap
	[
		rr:predicate gtpo:hasRef;
		rr:objectMap [
		rr:template "ref{species}_{id}";
		rr:termType rr:BlankNode;
		];
	]
	.

###################################################################
# Generates reference data in blank node  for cross reference and #
# taxonomy.                                                       #
###################################################################

	<TriplesMap9>
    a rr:TriplesMap;

    rr:logicalTable [ rr:sqlQuery """
		SELECT L.ligand_id AS id,
		database_id as DB,
		placeholder AS external_id,
		S.species_id AS species,
		ncbi_taxonomy_id AS ncbi,
		CASE
		WHEN database_id = 5 THEN 'http://identifiers.org/uniprot/'
		END AS namespace
		FROM ligand L, ligand_database_link LDL, species S
		WHERE L.ligand_id = LDL.ligand_id
		AND S.species_id = LDL.species_id
		AND database_id = 5;
		""";] ;

    rr:subjectMap [ rr:template "ref{species}_{id}";
					rr:termType rr:BlankNode; ];

	 rr:predicateObjectMap [
        rr:predicate gtpo:xref;
        rr:objectMap [ rr:template "{namespace}{external_id}" ];
	];
	 rr:predicateObjectMap [
		rr:predicate gtpo:hasTaxonomy;
		rr:objectMap [ rr:template "http://purl.obolibrary.org/obo/NCBITaxon_{ncbi}"];
	]
	.
